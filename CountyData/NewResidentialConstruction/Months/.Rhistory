plotdf(sindf(100))
sindf = function(n){
tibble(
x = seq(from = 0, to = 4*pi, length.out = n),
y = sin(x)
)
}
lm(y ~ x, sindf(10))
lm(y ~ x, sindf(100))
lm(y ~ x, sindf(1000))
plotdf(sindf(100))
sqrsum = function(x) sum(x^2)
r2 = function(df){
1 - sqrsum(df$y - df$yhat) / sqrsum(df$y - mean(df$y))
}
r20 = function(df){
sqrsum(df$yhat) / sqrsum(df$y)
}
lmpred = function(df, noint = F){
form = if(noint) y ~ x - 1 else y ~ x
model = lm(form, df)
df = mutate(df, yhat = predict(model, df))
print(str_c("R2: ", r2(df)))
print(str_c("R20: ", r20(df)))
df
}
plotdf = function(df){
ggplot(df, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm")
}
data1 = tibble(
x = runif(100,0,100),
y = x + runif(100,-100,100000)
) %>% lmpred
data2 = tibble(
x = runif(100,0,100),
y = x + runif(100,-100,100)
) %>% lmpred
data3 = tibble(
x = runif(100,0,100),
y = x + runif(100,-10000,10000)
) %>% lmpred
data4 = tibble(
x = runif(100,-100,100),
y = x + runif(100,-10000,10000)
) %>% lmpred
sindf = function(n){
tibble(
x = seq(from = 0, to = 4*pi, length.out = n),
y = sin(x)
)
}
lm(y ~ x, sindf(10))
lm(y ~ x, sindf(100))
lm(y ~ x, sindf(1000))
adversedata = tibble(
x = c(1,1.01,1.02,2,2.01,2.02,3,3.01,3.01),
y = c(1,2,3,1,2,3,1,2,3)
) %>% lmpred()
adversedata = tibble(
x = c(1,1.01,1.02,2,2.01,2.02,3,3.01,3.01),
y = c(1,2,3,1,2,3,1,2,3)
) %>% lmpred(T)
sindf(10e5) %>% lmpred
sindf(10e5) %>% plotdf
sindf(10e4) %>% plotdf
sindf(10) %>% plotdf
sindf(100) %>% plotdf
sindf(1000) %>% plotdf
sindf = function(n){
tibble(
x = seq(from = 0, to = 5*pi, length.out = n),
y = sin(x)
)
}
sindf(1000) %>% plotdf
lm(y ~ x, sindf(1000))
sindf(1000) %>% lmpred
data1 = tibble(
x = 1:100,
y = 100 + x/10 + runif(100,-10,10)
)
library(tidyverse)
data1 = tibble(
x = 1:100,
y = 100 + x/10 + runif(100,-10,10)
)
data2 = data1 %>% mutate(y = 1000*y)
lm(y ~ x, data1)
lm(y ~ x, data2)
lm(y ~ x - 1, data1)
lm(y ~ x - 1, data2)
library(tidyverse)
library(tidyverse)
randbin = function(p, n){
round(runif(n,2*p-1,1))
}
logis
plogis
plogis(200)
plogis(c(200,100))
?plogis
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings)
pcardiac = plogis(10 + male*10 + age - lnearn),
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people
people$cardiac
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people = tibble(
)
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 50),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people
people$cardiac
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 30),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 25),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, 100),
age = runif(100, 18, 60),
earnings = runif(100,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 15),
cardiac = (pcardiac + runif(100,-0.5,0.5)) > 0.5
)
people$cardiac %>% sum
n=1000
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 15),
cardiac = (pcardiac + runif(n,-0.5,0.5)) > 0.5
)
people
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(n,-0.5,0.5)) > 0.5
)
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(n,-0.5,0.5)) > 0.5,
sports = plogis(20*male - age/2 - lnearn/10)
)
people
people$sports
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(n,-0.5,0.5)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10)
)
people
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(n,-0.5,0.5)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.5,0.5)) > 0.5,
)
people
people$sports
people$sports %>% sum
library(glmnet)
?glm
glm(cardiac ~ male + age + lnearn, family = binomial(link = "logit"), people)
n=1000
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 10),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
glm(cardiac ~ male + age + lnearn, family = binomial(link = "logit"), people)
people$cardiac %>% sum
n=1000
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 15),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
glm(cardiac ~ male + age + lnearn, family = binomial(link = "logit"), people)
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 25),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 50),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 30),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
people$cardiac %>% sum
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 35),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
people$cardiac %>% sum
n=1000
people = tibble(
male = randbin(0.5, n),
age = runif(n, 18, 60),
earnings = runif(n,1000,100000),
lnearn = log(earnings),
pcardiac = plogis(10 + male*10 + age - lnearn, scale = 35),
cardiac = (pcardiac + runif(n,-0.2,0.2)) > 0.5,
psports = plogis(20*male - age/2 - lnearn/10),
sports = (psports + runif(n,-0.2,0.2)) > 0.5,
)
glm(cardiac ~ male + age + lnearn, family = binomial(link = "logit"), people)
m = glm(cardiac ~ male + age + lnearn, family = binomial(link = "logit"), people)
m
m %>% str()
m$R
m$residuals
m$residuals < 1
m$residuals < 1 %>% sum
(m$residuals < 1)
(m$residuals < 1) %>% sum
m = glm(cardiac ~ male + age + lnearn, family = binomial(link = "cloglog"), people)
glm(cardiac ~ male + age + lnearn, family = binomial(link = "cloglog"), people)
library(tidyverse)
library(tidymodels)
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05)
data
roc_curve(data)
?roc_curve
roc_curve(data, pred, true)
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = as.factor(true))
roc_curve(data, pred, true)
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = as.factor(true))
roc_curve(data, pred, true)
data
roc_curve(data, true, pred)
roc_curve(data, true, pred) %>% autoplot
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = factor(true, levels = c(0, 1)))
roc_curve(data, true, pred) %>% autoplot
roc_curve(data, true, pred)
data
data$true
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = factor(true, levels = c(1, 0)))
roc_curve(data, true, pred)
roc_curve(data, true, pred) %>% autoplot
t = 0.00024/0.00054
p = pt(t, 205)
t = 0.00024/0.00054
p = pt(t, 205)
t = 0.00024/0.00054
p = pt(t, 205)
p
?pt
p = pt(t, 205, lower.tail = F)
t = 0.00024/0.00054
p = pt(t, 205, lower.tail = F)
p
p = 2*pt(-abs(t), 205)
t = 0.00024/0.00054
p = 2*pt(-abs(t), 205)
p
t
t = 0.00024/0.00054
p = pt(t, 205, lower.tail = FALSE)
p
qn(0.95)
qnorm(0.9)
qnorm(0.95)
qnorm(0.975)
pm = function(x, y){
if(y < 0){
c(x+y, x-y)
} else{
c(x-y, x+y)
}
}
0.412 %+-% 3
`%+-%` = function(x, y){
if(y < 0){
c(x+y, x-y)
} else{
c(x-y, x+y)
}
}
t = 0.00024/0.00054
p = pt(t, 205, lower.tail = FALSE)
p
0.412 %+-% 3
0.412 %+-% 1.96*0.94
0.412 %+-% 1.96*0.094
0.412 %+-% (1.96*0.094)
?401KSUBS
401ksubs
??401ksubs
??
a
k401ksubs = as_tibble(k401ksubs)
library(tidyverse)
library(wooldridge)
k401ksubs = as_tibble(k401ksubs)
econmath
?econmath
k401ksubs = as_tibble(k401ksubs) %>%
filter(fsize == 1)
nrow(k401ksubs)
reg1ii = lm(nettfa ~ inc + age)
reg1ii = lm(nettfa ~ inc + age, k401ksubs)
summary(regiii)
reg1ii = lm(nettfa ~ inc + age, k401ksubs)
summary(regiii)
reg1ii = lm(nettfa ~ inc + age, k401ksubs)
summary(reg1ii)
?k401ksubs
regiii
reg1ii
summary(reg1ii)
summary(reg1ii) %>% str
t = 0.84266/0.09202
t = (0.84266 - 1)/0.09202
t
p = pt(t, 2017-3, lower.tail = TRUE)
t = (0.84266 - 1)/0.09202
p = pt(t, 2017-3, lower.tail = TRUE)
p
reg1v = lm(nettfa ~ inc, k401ksubs)
summary(reg1v)
lm(nettfa ~ age*inc) %>% summary
lm(nettfa ~ age*inc, k401ksubs) %>% summary
lm(nettfa ~ I(age*inc), k401ksubs) %>% summary
?econmath
score
econmath$score
econmath$score %>% range
range(econmath$score)
var(econmath$score)
ggplot(econmath) + geom_hist(aes(x = score))
ggplot(econmath) + geom_histogram(aes(x = score))
sd(econmath$score)
econmath$score %>% map(\(x) x^2)
econmath$score %>% map_dbl(\(x) x^2)
(econmath$score %>% map_dbl(\(x) x^2)) - (mean(econmath$score)^2)
mean((econmath$score %>% map_dbl(\(x) x^2)) - (mean(econmath$score)^2))
nrow(econmath)
nrow(econmath)
reg2iii = lm(score ~ colgpa + actmth + acteng)
reg2iii = lm(score ~ colgpa + actmth + acteng, econmath)
summary(reg2iii)
t = 0.05176/0.11106
p = 2*pt(-abs(t), 810, lower.tail = TRUE)
p
p = 2*pnorm(-abs(t), lower.tail = TRUE)
p
t = 0.05176/0.11106
p = 2*pt(-abs(t), 810, lower.tail = TRUE)
p
setwd("~/Coursework/DatEcon/Project/Data/CountyData/RealtorDotCom")
library(tidyverse)
rdc = read_csv("RDC_Inventory_Core_Metrics_County_History.csv")
rdc
rdc %>% colnames
rdc %>% select(-county_name)
rdc %>% select(-county_name) %>% select(-c(ends_with(mm), ends_with(yy)))
rdc %>% select(-county_name) %>% select(-c(ends_with("mm"), ends_with("yy")))
rdc = read_csv("RDC_Inventory_Core_Metrics_County_History.csv") %>%
select(-c(ends_with("mm"), ends_with("yy"), county_name))
rdc
rdc %>% colnames
rdc = read_csv("RDC_Inventory_Core_Metrics_County_History.csv")
rds
rdc
rdc$quality_flag
qdc
rdc
rdc %>% colnames
source("~/Coursework/DatEcon/Project/Data/CountyData/RealtorDotCom/process.R", echo=TRUE)
source("~/Coursework/DatEcon/Project/Data/CountyData/NewResidentialConstruction/scrape.R", echo=TRUE)
?grep
?readLines
?read_csv
