0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = as.factor(true))
roc_curve(data, pred, true)
data
roc_curve(data, true, pred)
roc_curve(data, true, pred) %>% autoplot
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = factor(true, levels = c(0, 1)))
roc_curve(data, true, pred) %>% autoplot
roc_curve(data, true, pred)
data
data$true
data = tribble(~true, ~pred,
1,0.9,
1,0.75,
0,0.3,
0,0.2,
0,0.05) %>%
mutate(true = factor(true, levels = c(1, 0)))
roc_curve(data, true, pred)
roc_curve(data, true, pred) %>% autoplot
t = 0.00024/0.00054
p = pt(t, 205)
t = 0.00024/0.00054
p = pt(t, 205)
t = 0.00024/0.00054
p = pt(t, 205)
p
?pt
p = pt(t, 205, lower.tail = F)
t = 0.00024/0.00054
p = pt(t, 205, lower.tail = F)
p
p = 2*pt(-abs(t), 205)
t = 0.00024/0.00054
p = 2*pt(-abs(t), 205)
p
t
t = 0.00024/0.00054
p = pt(t, 205, lower.tail = FALSE)
p
qn(0.95)
qnorm(0.9)
qnorm(0.95)
qnorm(0.975)
pm = function(x, y){
if(y < 0){
c(x+y, x-y)
} else{
c(x-y, x+y)
}
}
0.412 %+-% 3
`%+-%` = function(x, y){
if(y < 0){
c(x+y, x-y)
} else{
c(x-y, x+y)
}
}
t = 0.00024/0.00054
p = pt(t, 205, lower.tail = FALSE)
p
0.412 %+-% 3
0.412 %+-% 1.96*0.94
0.412 %+-% 1.96*0.094
0.412 %+-% (1.96*0.094)
?401KSUBS
401ksubs
??401ksubs
??
a
k401ksubs = as_tibble(k401ksubs)
library(tidyverse)
library(wooldridge)
k401ksubs = as_tibble(k401ksubs)
econmath
?econmath
k401ksubs = as_tibble(k401ksubs) %>%
filter(fsize == 1)
nrow(k401ksubs)
reg1ii = lm(nettfa ~ inc + age)
reg1ii = lm(nettfa ~ inc + age, k401ksubs)
summary(regiii)
reg1ii = lm(nettfa ~ inc + age, k401ksubs)
summary(regiii)
reg1ii = lm(nettfa ~ inc + age, k401ksubs)
summary(reg1ii)
?k401ksubs
regiii
reg1ii
summary(reg1ii)
summary(reg1ii) %>% str
t = 0.84266/0.09202
t = (0.84266 - 1)/0.09202
t
p = pt(t, 2017-3, lower.tail = TRUE)
t = (0.84266 - 1)/0.09202
p = pt(t, 2017-3, lower.tail = TRUE)
p
reg1v = lm(nettfa ~ inc, k401ksubs)
summary(reg1v)
lm(nettfa ~ age*inc) %>% summary
lm(nettfa ~ age*inc, k401ksubs) %>% summary
lm(nettfa ~ I(age*inc), k401ksubs) %>% summary
?econmath
score
econmath$score
econmath$score %>% range
range(econmath$score)
var(econmath$score)
ggplot(econmath) + geom_hist(aes(x = score))
ggplot(econmath) + geom_histogram(aes(x = score))
sd(econmath$score)
econmath$score %>% map(\(x) x^2)
econmath$score %>% map_dbl(\(x) x^2)
(econmath$score %>% map_dbl(\(x) x^2)) - (mean(econmath$score)^2)
mean((econmath$score %>% map_dbl(\(x) x^2)) - (mean(econmath$score)^2))
nrow(econmath)
nrow(econmath)
reg2iii = lm(score ~ colgpa + actmth + acteng)
reg2iii = lm(score ~ colgpa + actmth + acteng, econmath)
summary(reg2iii)
t = 0.05176/0.11106
p = 2*pt(-abs(t), 810, lower.tail = TRUE)
p
p = 2*pnorm(-abs(t), lower.tail = TRUE)
p
t = 0.05176/0.11106
p = 2*pt(-abs(t), 810, lower.tail = TRUE)
p
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
constr_ind = read_xlsx("price_sold_cust.xlsx")
?read_xlsx
??read_xlsx
library(readxl)
constr_ind = read_xlsx("price_sold_cust.xlsx")
constr_ind
constr_ind = read_xlsx("price_sold_cust.xlsx")
constr_ind
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(-where(\(x) all(is.na(x))))
constr_ind
constr_ind %>% pull(6)
constr_ind %>% pull(`6`)
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
filter(year < 2024) %>%
select(-where(\(x) all(is.na(x))))
constr_ind
constr_ind$Year
constr_ind = read_xlsx("price_sold_cust.xlsx")
constr_ind
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(ends_with("Quarter"))
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter")
constr_ind
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = constr_price_ind) %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$"))
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "constr_price_ind") %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$"))
constr_ind
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "constr_price_ind") %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$"),
date = ym(Year, (Quarter-1)*3+1))
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "constr_price_ind") %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$") %>% as.numeric(),
date = ym(Year, (Quarter-1)*3+1))
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "constr_price_ind") %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$") %>% as.numeric())
constr_ind
ym(constr_ind$Year, constr_ind$Quarter)
ym(str_c(constr_ind$Year," " constr_ind$Quarter))
ym(str_c(constr_ind$Year," ", constr_ind$Quarter))
constr_ind %>% tail
constr_ind %>% slice_tail(n=20)
constr_ind %>% slice_tail(n=30)
constr_ind %>% nrow
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q"))
constr_ind
constr_ind %>% tail
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "constr_price_ind") %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$") %>% as.numeric(),
date_string = str_c(Year, " ", (Quarter-1)*3 + 1),
date = ym(date_string))
constr_ind
constr_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "constr_price_ind") %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$") %>% as.numeric(),
date_string = str_c(Year, " ", (Quarter-1)*3 + 1),
date = ym(date_string)) %>%
select(date, constr_price_ind)
constr_ind
write_csv(constr_ind, "CONSTR_IND.csv")
mspus = read_csv("MSPUS.csv")
mspus
mspus = read_csv("MSPUS.csv") %>%
rename(across(everything, str_lower))
mspus = read_csv("MSPUS.csv") %>%
rename(across(everything(), str_lower))
?rename
mspus = read_csv("MSPUS.csv") %>%
rename_with(str_lower, everything())
mspus = read_csv("MSPUS.csv") %>%
rename_with(str_to_lower, everything())
mspus
constr_data = inner_join(constr_ind, mspus)
constr_data
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
library(tidyverse)
constr = read_csv("CONSTR.csv")
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
constr_data
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
constr_data
base_index = constr_data %>%
filter(year == 2005) %>%
pull(constr_price_ind)
base_index = constr_ind %>%
filter(year == 2005) %>%
pull(constr_price_ind)
constr_data = inner_join(constr_ind, mspus) %>%
mutate(corrected_price = mspus * constr_price_ind / base_index)
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
constr_data = inner_join(constr_ind, mspus) %>%
mutate(corrected_price = (mspus * constr_price_ind) / base_index)
constr_data = inner_join(constr_ind, mspus) %>%
mutate(corrected_price = (mspus * constr_price_ind))
constr_data = inner_join(constr_ind, mspus) %>%
mutate(corrected_price = (mspus * constr_price_ind))
base_index
base_index = constr_ind %>%
filter(year == 2005, quarter == 1) %>%
pull(constr_price_ind)
base_index
constr_data = inner_join(constr_ind, mspus) %>%
mutate(corrected_price = (mspus * constr_price_ind) / base_index)
constr_data
constr_data$corrected_price
constr_data %>% tail
constr_ind
constr_ind %>% tail
constr_ind %>% filter(is.na(constr_price_ind))
constr_ind %>% filter(is.na(date))
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
constr_data
constr_data %>% na.omit
library(tidyverse)
constr = read_csv("CONSTR.csv")
ggplot(constr) +
geom_line(aes(x = date, y = corrected_price))
constr_data
constr
ggplot(constr) +
geom_line(aes(x = date, y = constr_price_ind))
ggplot(constr) +
geom_line(aes(x = date, y = mspus))
constr$mspus
constr = read_csv("CONSTR.csv") %>%
filter(year >= 2000)
ggplot(constr) +
geom_line(aes(x = date, y = mspus))
ggplot(constr) +
geom_line(aes(x = date, y = constr_price_ind))
mspus
ggplot(constr) +
geom_line(aes(x = date, y = mspus))
ggplot(constr) +
geom_line(aes(x = date, y = constr_price_i))
ggplot(constr) +
geom_line(aes(x = date, y = constr_price_ind))
constr2 = constr %>%
pivot_longer(c(mspus, constr_price_ind))
constr2
ggplot(constr) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ name)
ggplot(constr) +
geom_line(aes(x = date, y = value)) +
facet_wrap(. ~ name)
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(. ~ name)
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(. ~ name, scales = "free")
constr2 = constr %>%
pivot_longer(c(mspus, constr_price_ind, corrected))
constr2 = constr %>%
pivot_longer(c(mspus, constr_price_ind, corrected_price))
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(. ~ name, scales = "free")
constr
constr %>% tail
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/ConstructionPriceIndex/process.R", echo=TRUE)
library(tidyverse)
constr = read_csv("CONSTR.csv") %>%
filter(year >= 2000)
constr2 = constr %>%
pivot_longer(c(mspus, constr_price_ind, corrected_price))
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(. ~ name, scales = "free")
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., scales = "free")
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ name, nrow = 3, scales = "free")
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ name, nrow = 3, scales = "free")
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ name, ncol, scales = "free")
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ name, ncol = 3, scales = "free")
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(~ name, ncol = 3, scales = "free")
permit_values = read_csv("building_permits.csv")
permit_values = read_csv("building_permits.csv")
permit_values = read_xlsx("building_permits.xlsx")
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))))
permit_values
permit_values %>% colnames
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."))
permit_values
permit_values %>% colnames
permit_values$`Total value rep`
permit_values %>% colnames
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep"))
permit_values
permit_values %>% colnames
permit_values
as_date("1996")
?as_date
as_date("year 1996")
as_date("YYYY: 1996")
?`name-repair`
permit_values %>% make_names
permit_values %>% vec_as_names
permit_values %>% vctrs::vec_as_names
permit_values %>% (vctrs::vec_as_names)
?rename
permit_values %>% colnames %>% (vctrs::vec_as_names)
permit_values %>% colnames %>% (vctrs::vec_as_names(repair = "universal"))
permit_values %>% colnames %>% vctrs::vec_as_names(repair = "universal")
permit_values %>% colnames %>% vctrs::vec_as_names()
permit_values %>% colnames %>% vctrs::vec_as_names(repair = "universal")
?rename_all
?rename_with
?make.names
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE)
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.units / Single.family.value)
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.units / Single.family.value,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string))
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.units / Single.family.value,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string)) %>%
select(date, average_value)
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.units / Single.family.value,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string))
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.units / Single.family.value,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string)) %>%
group_by(date) %>%
summarize(median_average_value = median(average_value))
permit_values
permit_values %>% tail
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.units / Single.family.value,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string)) %>%
group_by(date) %>%
summarize(median_average_value = mean(average_value))
permit_values
permit_values %>% tali
permit_values %>% tail
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
mutate(average_value = Single.family.value / Single.family.units,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string)) %>%
group_by(date) %>%
summarize(median_average_value = median(average_value))
permit_values
permit_values %>% tail
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
select(-where(\(x) all(is.na(x))), -starts_with("..."),
-ends_with(" rep")) %>%
rename_with(make.names, unique = TRUE) %>%
group_by(Survey.Date) %>%
summarize(units = sum(Single.family.units),
value = sum(Single.family.value)) %>%
mutate(average_value = value / units,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string))
permit_values
ggplot(permit_values) + geom_line(x = date, y = average_value)
ggplot(permit_values) + geom_line(aes(x = date, y = average_value))
ggplot(permit_values) + geom_line(aes(x = date, y = value))
ggplot(permit_values) + geom_line(aes(x = date, y = units))
ggplot(permit_values) + geom_line(aes(x = date, y = average_value))
permit_values = read_xlsx("building_permits.xlsx")
permit_values %>% colnames
permit_values = read_xlsx("building_permits.xlsx") %>%
rename_with(make.names, unique = TRUE) %>%
select(State.Name, Survey.Date, ends_with("rep")) %>%
group_by(Survey.Date) %>%
summarize(units = sum(Single.family.units),
value = sum(Single.family.value)) %>%
mutate(average_value = value / units,
date_string = str_c("01/01/", Survey.Date),
date = mdy(date_string))
rlang::last_trace()
permit_values = read_xlsx("building_permits.xlsx") %>%
rename_with(make.names, unique = TRUE) %>%
select(State.Name, Survey.Date, ends_with("rep"))
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
rename_with(make.names, unique = TRUE) %>%
select(State.Name, Survey.Date, ends_with("rep")) %>%
rename_with(\(n) str_extract(n, ".+[^(.rep)]"))
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
rename_with(make.names, unique = TRUE) %>%
select(State.Name, Survey.Date, ends_with("rep")) %>%
rename_with(\(n) str_extract(n, ".+[^(\\.rep)]"))
permit_values
permit_values = read_xlsx("building_permits.xlsx") %>%
rename_with(make.names, unique = TRUE) %>%
select(State.Name, Survey.Date, ends_with("rep"))
permit_values
str_extract("State.Name", ".+")
str_extract("State.Name", ".+[^(\\.rep)]")
str_extract("State.Name", ".+[^(\\rep)]")
str_extract("State.Name", ".+[^(rep)]")
str_extract("State.Name", "(rep)")
str_extract("State.Name", "[^(rep)]")
