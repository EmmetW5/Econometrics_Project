}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("sold_corrected", "sold_price_ind", "mspus"))
plotConstrVars("constr_corrected")
plotConstrVars("sold_corrected_cash")
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
cpi
cpi %>% tail()
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/ConstructionPriceIndex/process.R", echo=TRUE)
plotConstrVars(c("cpi_mspus", "cpi_sold"))
library(tidyverse)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars("sold_corrected_cash")
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars(c("mspus", "sold_ind"))
plotConstrVars(c("mspus", "sold_price_ind"))
plotConstrVars(c("mspus", "sold_price_ind","cpi_sold"))
cpi
cpi %>% filter(year(date) >= 2012)
cpi %>% filter(year(date) >= 2012) %>% head
cpi %>% filter(year(date) >= 2012) %>% tail
180/313
90/228
constr_data = sold_ind %>%
inner_join(mspus) %>%
inner_join(msptfc) %>%
inner_join(constr_ind) %>%
inner_join(fmr) %>%
inner_join(cpi) %>%
mutate(cpi_mspus = (mspus / cpi),
sold_corrected = (mspus / sold_price_ind),
cpi_sold = (sold_price_ind / cpi),
constr_corrected = (mspus / constr_price_ind),
sold_corrected_cash = (msptfc / sold_price_ind),
constr_corrected_cash = (msptfc / constr_price_ind),
fmr_corrected = (fmr_1 / constr_price_ind))
write_csv(constr_data, "CONSTR.csv")
library(tidyverse)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("mspus", "sold_price_ind","cpi_sold"))
plotConstrVars("sold_corrected_cash")
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars("constr_corrected")
plotConstrVars(c("constr_corrected", "sold_corrected"))
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
library(tidysynth)
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plot_trends(synth)
grab_significance(synth)
tidysynth::grab_outcome(synth)
tidysynth::plot_differences()
plot_differences(synth)
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2020
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plot_trends(synth)
plot_differences(synth)
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2020
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plot_trends(synth)
plot_differences(synth)
grab_significance(synth)
grab_significance(synth) %>% filter(type == Treated)
grab_significance(synth) %>% filter(type == "Treated")
grab_significance(synth) %>% filter(type == "Treated") %>% pull(fishers_exact_pvalue)
plot_mspe_ratio(synth)
library(tidyverse)
library(tidysynth)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars("sold_corrected_cash")
plotConstrVars(c("constr_corrected", "sold_corrected"))
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2020
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plot_trends(synth)
plot_differences(synth)
s = sold_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "sold_price_ind")
s
s %>% mutate(date_string = str_C(Year, " ", Quarter))
library(tidyverse)
s %>% mutate(date_string = str_c(Year, " ", Quarter), date = yq(date_string))
s %>% mutate(date_string = str_c(Year, " ", Quarter), date = yq(date_string)) %>% pull(date)
yq_to_dates = function(x) mutate(x,
date_string = str_c(year, " ", quarter),
date = yq(date_string))
sold_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "sold_price_ind") %>%
rename_lower() %>%
yq_to_dates() %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$") %>% as.numeric(),
date_string = str_c(Year, " ", (Quarter-1)*3 + 1),
date = ym(date_string)) %>%
select(-date_string) %>%
rename_lower() %>%
na.omit()
rename_lower = function(x) rename_with(x, str_to_lower, everything())
sold_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "sold_price_ind") %>%
rename_lower() %>%
yq_to_dates() %>%
mutate(Quarter = str_extract(Quarter, "[0-9]$") %>% as.numeric(),
date_string = str_c(Year, " ", (Quarter-1)*3 + 1),
date = ym(date_string)) %>%
select(-date_string) %>%
rename_lower() %>%
na.omit()
yq_to_dates = function(x) {
x %>%
mutate(date_string = str_c(year, " ", quarter),
date = yq(date_string)) %>%
select(-date_string)
}
sold_ind = read_xlsx("price_sold_cust.xlsx") %>%
select(Year, starts_with("Q")) %>%
pivot_longer(starts_with("Q"), names_to = "Quarter",
values_to = "sold_price_ind") %>%
rename_lower() %>%
yq_to_dates() %>%
na.omit()
sold_ind
hpi = read_csv("hpi_at_state.csv") %>%
rename_lower() %>%
group_by(state, year, quarter) %>%
summarize(HPI = mean(HPI, na.rm = T)) %>%
yq_to_dates()
hpi = read_csv("hpi_at_state.csv") %>%
rename_lower() %>%
group_by(state, year, quarter) %>%
summarize(hpi = mean(hpi, na.rm = T)) %>%
yq_to_dates()
hpi
hpi = read_csv("hpi_at_state.csv") %>%
rename_lower() %>%
group_by(year, quarter) %>%
summarize(hpi = mean(hpi, na.rm = T)) %>%
yq_to_dates()
hpi
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/ConstructionPriceIndex/process.R", echo=TRUE)
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/ConstructionPriceIndex/process.R", echo=TRUE)
hpi
yq_to_dates = function(x) {
x %>%
mutate(date_string = str_c(year, " ", quarter),
date = yq(date_string)) %>%
select(-c(date_string, quarter, year))
}
hpi = read_csv("hpi_at_state.csv") %>%
rename_lower() %>%
group_by(year, quarter) %>%
summarize(hpi = mean(hpi, na.rm = T)) %>%
yq_to_dates()
hpi
hpi = read_csv("hpi_at_state.csv") %>%
rename_lower() %>%
group_by(year, quarter) %>%
summarize(hpi = mean(hpi, na.rm = T)) %>%
ungroup() %>%
yq_to_dates()
hpi
constr_data = sold_ind %>%
inner_join(mspus) %>%
inner_join(msptfc) %>%
inner_join(constr_ind) %>%
inner_join(fmr) %>%
inner_join(cpi) %>%
inner_join(hpi) %>%
mutate(cpi_mspus = (mspus / cpi),
sold_corrected = (mspus / sold_price_ind),
cpi_sold = (sold_price_ind / cpi),
constr_corrected = (mspus / constr_price_ind),
sold_corrected_cash = (msptfc / sold_price_ind),
constr_corrected_cash = (msptfc / constr_price_ind),
fmr_corrected = (fmr_1 / constr_price_ind),
sold_2cor = sold_corrected * cpi / hpi)
cpi
fmr
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/ConstructionPriceIndex/process.R", echo=TRUE)
plotConstrVars(c("sold_2cor", "cpi_mspus"))
library(tidyverse)
library(tidysynth)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold2cor", "cpi_mspus"))
constr
plotConstrVars(c("sold_2cor", "cpi_mspus"))
plotConstrVars(c("sold_2cor", "sold_corrected","cpi_mspus"))
plotConstrVars(c("sold_2cor", "sold_corrected", "cpi_mspus"))
plotConstrVars(c("sold_corrected", "cpi_mspus"))
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/ConstructionPriceIndex/process.R", echo=TRUE)
library(tidyverse)
library(tidysynth)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars("sold_corrected_cash")
plotConstrVars(c("constr_corrected", "sold_corrected"))
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2020
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plotConstrVars(c("sold_2cor", "cpi_mspus"))
source("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/ConstructionPriceIndex/process.R", echo=TRUE)
library(tidyverse)
library(tidysynth)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_2cor", "cpi_mspus"))
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars("sold_corrected_cash")
plotConstrVars(c("constr_corrected", "sold_corrected"))
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2020
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("hpi", "cpi_mspus"))
library(tidyverse)
library(tidysynth)
constr = read_csv("CausalAnalysis/Final/ConstructionPriceIndex/CONSTR.csv")
plotConstrVars = function(vars, after = 2012){
constr2 = constr %>%
filter(year >= after) %>%
pivot_longer(all_of(vars))
breaks = (constr2$date %>% unique)[seq(1, length(constr$date), by = 6)]
ggplot(constr2) +
geom_line(aes(x = date, y = value)) +
facet_wrap(name ~ ., ncol = 1, scales = "free_y") +
scale_x_continuous(breaks = breaks) +
theme(axis.text.x = element_text(angle = 90))
}
plotConstrVars("sold_corrected", 0)
plotConstrVars(c("sold_corrected", "cpi_mspus"))
plotConstrVars(c("cpi_mspus", "cpi_sold"))
plotConstrVars("sold_corrected_cash")
plotConstrVars(c("constr_corrected", "sold_corrected"))
plotConstrVars(c("hpi", "cpi_mspus"))
fmr_synth = read_csv("CausalAnalysis/Final/Minnesota/FMR_synth.csv")
treat_date = 2020
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
synth = fmr_synth %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2016,
populat = pop2010,
mdom = median_days_on_market,
nlc = new_listing_count,
plc = pending_listing_count,
pic = price_increased_count,
msf = median_square_feet
) %>%
generate_weights() %>%
generate_control()
plot_trends(synth)
plot_differences(synth)
tinytex::install_tinytex()
