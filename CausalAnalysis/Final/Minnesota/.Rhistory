library(tidyverse)
library(tidysynth)
states = c("Minnesota", "Wisconsin", "Iowa", "North Dakota", "South Dakota")
treat_date = 2019
unit_type = "areaname22"
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
fmr = read_csv("FMR/FMR.csv") %>%
distinct(year, areaname22, .keep_all = T) %>%
rename(price = fmr_1) %>%
mutate(treated = (get(unit_type) == treated_unit))
if(length(states) > 0) fmr = filter(fmr, statename %in% states)
fmrsum = fmr %>%
group_by(treated, year) %>%
summarize(price = mean(price))
ggplot(fmrsum) +
geom_line(aes(x = year, y = price, color = treated))
synth = fmr %>%
synthetic_control(outcome = price,
unit = !!rlang::parse_expr(unit_type),
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(mean(pop2010, na.rm = T)) %>%
generate_weights() %>%
generate_control()
fmr
?synthetic_control
synth = fmr %>%
synthetic_control(outcome = price,
unit = !!rlang::parse_expr(unit_type),
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(pop2010 = mean(pop2010, na.rm = T)) %>%
generate_weights() %>%
generate_control()
fmr
library(tidyverse)
library(tidysynth)
states = c("Minnesota", "Wisconsin", "Iowa", "North Dakota", "South Dakota")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
fmr = read_csv("FMR/FMR.csv") %>%
filter(year >= 2012)
distinct(year, areaname22, .keep_all = T) %>%
rename(price = fmr_1) %>%
mutate(treated = (get(unit_type) == treated_unit))
fmr
fmr %>% count(areaname22)
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(pop2010 = mean(pop2010, na.rm = T)) %>%
generate_weights() %>%
generate_control()
states = c("Minnesota", "Wisconsin", "Iowa", "North Dakota", "South Dakota")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
fmr = read_csv("FMR/FMR.csv") %>%
filter(year >= 2012) %>%
distinct(year, areaname22, .keep_all = T) %>%
rename(price = fmr_1) %>%
mutate(treated = (get(unit_type) == treated_unit))
if(length(states) > 0) fmr = filter(fmr, statename %in% states)
fmr %>% count(areaname22)
library(tidyverse)
library(tidysynth)
states = c("Minnesota", "Wisconsin", "Iowa", "North Dakota", "South Dakota")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
fmr = read_csv("FMR/FMR.csv") %>%
filter(year >= 2012) %>%
distinct(year, areaname22, .keep_all = T) %>%
rename(price = fmr_1) %>%
mutate(treated = (get(unit_type) == treated_unit))
if(length(states) > 0) fmr = filter(fmr, statename %in% states)
fmrsum = fmr %>%
group_by(treated, year) %>%
summarize(price = mean(price))
ggplot(fmrsum) +
geom_line(aes(x = year, y = price, color = treated))
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(pop2010 = mean(pop2010, na.rm = T)) %>%
generate_weights() %>%
generate_control()
fmr
fmr$year
fmr$year %>% range
library(tidyverse)
library(tidysynth)
states = c("Minnesota", "Wisconsin", "Iowa", "North Dakota", "South Dakota")
treat_date = 2019
treated_unit = "Minneapolis-St. Paul-Bloomington, MN-WI HUD Metro FMR Area"
fmr = read_csv("FMR/FMR.csv") %>%
filter(year >= 2012, year < 2024) %>%
distinct(year, areaname22, .keep_all = T) %>%
rename(price = fmr_1) %>%
mutate(treated = (get(unit_type) == treated_unit))
if(length(states) > 0) fmr = filter(fmr, statename %in% states)
fmrsum = fmr %>%
group_by(treated, year) %>%
summarize(price = mean(price))
ggplot(fmrsum) +
geom_line(aes(x = year, y = price, color = treated))
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(pop2010 = mean(pop2010, na.rm = T)) %>%
generate_weights() %>%
generate_control()
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2015,
pop2010 = mean(pop2010, na.rm = T)) %>%
generate_weights() %>%
generate_control()
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor() %>%
generate_weights() %>%
generate_control()
fmr
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2015,
statecode = max(statecode)) %>%
generate_weights() %>%
generate_control()
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_predictor(time_window = 2015,
pop2010 = pop2010) %>%
generate_weights() %>%
generate_control()
fmr
synth = fmr %>%
synthetic_control(outcome = price,
unit = areaname22,
time = year,
i_unit = treated_unit,
i_time = treat_date) %>%
generate_weights() %>%
generate_control()
setwd("~/Coursework/DatEcon/Project/Econometrics_Project/CausalAnalysis/Final/Minnesota")
rdc = read_csv("RDC/RDC.csv")
rdc
